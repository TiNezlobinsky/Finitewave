
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/2D/plot_act_time_2d_tracker.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_2D_plot_act_time_2d_tracker.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_2D_plot_act_time_2d_tracker.py:


ActivationTime2DTracker
========================

This example demonstrates how to track the activation times during the
simulation

.. GENERATED FROM PYTHON SOURCE LINES 9-57



.. image-sg:: /auto_examples/2D/images/sphx_glr_plot_act_time_2d_tracker_001.png
   :alt: plot act time 2d tracker
   :srcset: /auto_examples/2D/images/sphx_glr_plot_act_time_2d_tracker_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Running AlievPanfilov2D:   0%|          | 0/5000 [00:00<?, ?it/s]    Running AlievPanfilov2D:   0%|          | 1/5000 [00:00<21:59,  3.79it/s]    Running AlievPanfilov2D:   6%|▌         | 302/5000 [00:00<00:04, 1058.95it/s]    Running AlievPanfilov2D:  12%|█▏        | 607/5000 [00:00<00:02, 1722.63it/s]    Running AlievPanfilov2D:  18%|█▊        | 911/5000 [00:00<00:01, 2147.46it/s]    Running AlievPanfilov2D:  24%|██▍       | 1212/5000 [00:00<00:01, 2419.50it/s]    Running AlievPanfilov2D:  30%|███       | 1515/5000 [00:00<00:01, 2608.08it/s]    Running AlievPanfilov2D:  36%|███▋      | 1820/5000 [00:00<00:01, 2742.27it/s]    Running AlievPanfilov2D:  42%|████▎     | 2125/5000 [00:00<00:01, 2835.58it/s]    Running AlievPanfilov2D:  49%|████▊     | 2430/5000 [00:01<00:00, 2899.49it/s]    Running AlievPanfilov2D:  55%|█████▍    | 2735/5000 [00:01<00:00, 2943.45it/s]    Running AlievPanfilov2D:  61%|██████    | 3040/5000 [00:01<00:00, 2973.32it/s]    Running AlievPanfilov2D:  67%|██████▋   | 3344/5000 [00:01<00:00, 2991.04it/s]    Running AlievPanfilov2D:  73%|███████▎  | 3647/5000 [00:01<00:00, 3001.15it/s]    Running AlievPanfilov2D:  79%|███████▉  | 3950/5000 [00:01<00:00, 2998.58it/s]    Running AlievPanfilov2D:  85%|████████▌ | 4255/5000 [00:01<00:00, 3012.95it/s]    Running AlievPanfilov2D:  91%|█████████ | 4559/5000 [00:01<00:00, 3019.10it/s]    Running AlievPanfilov2D:  97%|█████████▋| 4862/5000 [00:01<00:00, 3016.21it/s]    Running AlievPanfilov2D: 100%|██████████| 5000/5000 [00:01<00:00, 2611.67it/s]






|

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import finitewave as fw

    # create a mesh of cardiomyocytes (elems = 1):
    n = 200
    tissue = fw.CardiacTissue2D([n, n])
    tissue.mesh = np.ones([n, n], dtype="uint8")
    tissue.add_boundaries()

    # create model object and set up parameters:
    aliev_panfilov = fw.AlievPanfilov2D()
    aliev_panfilov.dt = 0.01
    aliev_panfilov.dr = 0.25
    aliev_panfilov.t_max = 50

    # set up stimulation parameters:
    stim_sequence = fw.StimSequence()
    stim_sequence.add_stim(fw.StimVoltageCoord2D(time=0, volt_value=1,
                                                 x1=0, x2=3, y1=0, y2=n))

    # set up tracker parameters:
    tracker_sequence = fw.TrackerSequence()
    act_time_tracker = fw.ActivationTime2DTracker()
    act_time_tracker.threshold = 0.5
    act_time_tracker.step = 100  # calculate activation time every 100 steps
    tracker_sequence.add_tracker(act_time_tracker)

    # add the tissue and the stim parameters to the model object:
    aliev_panfilov.cardiac_tissue = tissue
    aliev_panfilov.stim_sequence = stim_sequence
    aliev_panfilov.tracker_sequence = tracker_sequence

    aliev_panfilov.run()

    # plot the activation time map
    X, Y = np.mgrid[0:n:1, 0:n:1]
    act_time = act_time_tracker.output
    act_time = np.where(act_time == -1, np.nan, act_time)
    levels = np.arange(np.nanmin(act_time), np.nanmax(act_time), 5)

    fig, ax = plt.subplots()
    ax.imshow(act_time)
    CS = ax.contour(X, Y, np.transpose(act_time), levels, colors='black')
    ax.clabel(CS, inline=True, fontsize=10)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.503 seconds)


.. _sphx_glr_download_auto_examples_2D_plot_act_time_2d_tracker.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_act_time_2d_tracker.ipynb <plot_act_time_2d_tracker.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_act_time_2d_tracker.py <plot_act_time_2d_tracker.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_act_time_2d_tracker.zip <plot_act_time_2d_tracker.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
