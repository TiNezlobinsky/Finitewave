
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/2D/plot_aliev_panfilov_2D_aniso.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_2D_plot_aliev_panfilov_2D_aniso.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_2D_plot_aliev_panfilov_2D_aniso.py:


AlievPanfilov2D (Aniso)
==========================

This example demonstrates how to use the Aliev-Panfilov model in 2D with
anisotropic tissue.

Anisotropy is set by specifying a fiber array (``CardiacTissue`` class) and
diffusion coefficients ``D_al``, ``D_ac`` (diffusion along and across fibers).
Always use ``AsymmetricStencil`` for weights computations in case of
anisotropic tissue.

.. GENERATED FROM PYTHON SOURCE LINES 14-55



.. image-sg:: /auto_examples/2D/images/sphx_glr_plot_aliev_panfilov_2D_aniso_001.png
   :alt: plot aliev panfilov 2D aniso
   :srcset: /auto_examples/2D/images/sphx_glr_plot_aliev_panfilov_2D_aniso_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Running AlievPanfilov2D:   0%|          | 0/3000 [00:00<?, ?it/s]    Running AlievPanfilov2D:   0%|          | 1/3000 [00:00<05:12,  9.60it/s]    Running AlievPanfilov2D:   2%|▏         | 70/3000 [00:00<00:07, 401.04it/s]    Running AlievPanfilov2D:   5%|▍         | 139/3000 [00:00<00:05, 529.20it/s]    Running AlievPanfilov2D:   7%|▋         | 208/3000 [00:00<00:04, 591.42it/s]    Running AlievPanfilov2D:   9%|▉         | 277/3000 [00:00<00:04, 625.18it/s]    Running AlievPanfilov2D:  12%|█▏        | 346/3000 [00:00<00:04, 645.75it/s]    Running AlievPanfilov2D:  14%|█▍        | 416/3000 [00:00<00:03, 660.60it/s]    Running AlievPanfilov2D:  16%|█▌        | 486/3000 [00:00<00:03, 671.72it/s]    Running AlievPanfilov2D:  19%|█▊        | 558/3000 [00:00<00:03, 684.74it/s]    Running AlievPanfilov2D:  21%|██        | 629/3000 [00:01<00:03, 690.60it/s]    Running AlievPanfilov2D:  23%|██▎       | 699/3000 [00:01<00:03, 690.91it/s]    Running AlievPanfilov2D:  26%|██▌       | 769/3000 [00:01<00:03, 691.54it/s]    Running AlievPanfilov2D:  28%|██▊       | 841/3000 [00:01<00:03, 697.87it/s]    Running AlievPanfilov2D:  30%|███       | 911/3000 [00:01<00:02, 697.55it/s]    Running AlievPanfilov2D:  33%|███▎      | 981/3000 [00:01<00:02, 696.47it/s]    Running AlievPanfilov2D:  35%|███▌      | 1053/3000 [00:01<00:02, 701.21it/s]    Running AlievPanfilov2D:  38%|███▊      | 1125/3000 [00:01<00:02, 704.97it/s]    Running AlievPanfilov2D:  40%|███▉      | 1197/3000 [00:01<00:02, 707.73it/s]    Running AlievPanfilov2D:  42%|████▏     | 1269/3000 [00:01<00:02, 708.52it/s]    Running AlievPanfilov2D:  45%|████▍     | 1340/3000 [00:02<00:02, 702.43it/s]    Running AlievPanfilov2D:  47%|████▋     | 1411/3000 [00:02<00:02, 689.18it/s]    Running AlievPanfilov2D:  49%|████▉     | 1480/3000 [00:02<00:02, 686.27it/s]    Running AlievPanfilov2D:  52%|█████▏    | 1551/3000 [00:02<00:02, 692.66it/s]    Running AlievPanfilov2D:  54%|█████▍    | 1623/3000 [00:02<00:01, 698.29it/s]    Running AlievPanfilov2D:  56%|█████▋    | 1693/3000 [00:02<00:01, 696.96it/s]    Running AlievPanfilov2D:  59%|█████▉    | 1764/3000 [00:02<00:01, 699.61it/s]    Running AlievPanfilov2D:  61%|██████    | 1836/3000 [00:02<00:01, 704.05it/s]    Running AlievPanfilov2D:  64%|██████▎   | 1908/3000 [00:02<00:01, 707.38it/s]    Running AlievPanfilov2D:  66%|██████▌   | 1980/3000 [00:02<00:01, 709.46it/s]    Running AlievPanfilov2D:  68%|██████▊   | 2052/3000 [00:03<00:01, 711.13it/s]    Running AlievPanfilov2D:  71%|███████   | 2124/3000 [00:03<00:01, 712.34it/s]    Running AlievPanfilov2D:  73%|███████▎  | 2196/3000 [00:03<00:01, 713.24it/s]    Running AlievPanfilov2D:  76%|███████▌  | 2268/3000 [00:03<00:01, 713.84it/s]    Running AlievPanfilov2D:  78%|███████▊  | 2340/3000 [00:03<00:00, 713.78it/s]    Running AlievPanfilov2D:  80%|████████  | 2412/3000 [00:03<00:00, 712.34it/s]    Running AlievPanfilov2D:  83%|████████▎ | 2484/3000 [00:03<00:00, 708.33it/s]    Running AlievPanfilov2D:  85%|████████▌ | 2555/3000 [00:03<00:00, 705.01it/s]    Running AlievPanfilov2D:  88%|████████▊ | 2626/3000 [00:03<00:00, 703.94it/s]    Running AlievPanfilov2D:  90%|████████▉ | 2697/3000 [00:03<00:00, 704.79it/s]    Running AlievPanfilov2D:  92%|█████████▏| 2768/3000 [00:04<00:00, 697.86it/s]    Running AlievPanfilov2D:  95%|█████████▍| 2839/3000 [00:04<00:00, 698.65it/s]    Running AlievPanfilov2D:  97%|█████████▋| 2911/3000 [00:04<00:00, 702.08it/s]    Running AlievPanfilov2D:  99%|█████████▉| 2982/3000 [00:04<00:00, 703.79it/s]    Running AlievPanfilov2D: 100%|██████████| 3000/3000 [00:04<00:00, 684.66it/s]






|

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import finitewave as fw

    # create a mesh of cardiomyocytes (elems = 1):
    n = 400
    tissue = fw.CardiacTissue2D([n, n])
    tissue.mesh = np.ones([n, n])
    tissue.add_boundaries()
    # add fibers orientation vectors
    tissue.fibers = np.zeros([n, n, 2])
    tissue.fibers[:, :, 0] = np.cos(0.25 * np.pi)
    tissue.fibers[:, :, 1] = np.sin(0.25 * np.pi)
    # add numeric method stencil for weights computations
    tissue.stencil = fw.AsymmetricStencil2D()
    tissue.D_al = 1
    tissue.D_ac = tissue.D_al/9

    # create model object and set up parameters:
    aliev_panfilov = fw.AlievPanfilov2D()
    aliev_panfilov.dt = 0.01
    aliev_panfilov.dr = 0.25
    aliev_panfilov.t_max = 30

    # set up stimulation parameters:
    stim_sequence = fw.StimSequence()
    stim_sequence.add_stim(fw.StimVoltageCoord2D(0, 1, n//2 - 3, n//2 + 3,
                                                 n//2 - 3, n//2 + 3))

    # add the tissue and the stim parameters to the model object:
    aliev_panfilov.cardiac_tissue = tissue
    aliev_panfilov.stim_sequence = stim_sequence

    aliev_panfilov.run()

    # show the potential map at the end of calculations:
    plt.figure()
    plt.imshow(aliev_panfilov.u)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.811 seconds)


.. _sphx_glr_download_auto_examples_2D_plot_aliev_panfilov_2D_aniso.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_aliev_panfilov_2D_aniso.ipynb <plot_aliev_panfilov_2D_aniso.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_aliev_panfilov_2D_aniso.py <plot_aliev_panfilov_2D_aniso.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_aliev_panfilov_2D_aniso.zip <plot_aliev_panfilov_2D_aniso.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
