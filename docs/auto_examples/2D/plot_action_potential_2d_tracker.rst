
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/2D/plot_action_potential_2d_tracker.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_2D_plot_action_potential_2d_tracker.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_2D_plot_action_potential_2d_tracker.py:


ActionPotential2DTracker
=========================

This example demonstrates how to track the action potential at the specified
cell indices.

.. GENERATED FROM PYTHON SOURCE LINES 9-52



.. image-sg:: /auto_examples/2D/images/sphx_glr_plot_action_potential_2d_tracker_001.png
   :alt: plot action potential 2d tracker
   :srcset: /auto_examples/2D/images/sphx_glr_plot_action_potential_2d_tracker_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Running AlievPanfilov2D:   0%|          | 0/10000 [00:00<?, ?it/s]    Running AlievPanfilov2D:   0%|          | 5/10000 [00:00<03:20, 49.86it/s]    Running AlievPanfilov2D:  11%|█         | 1081/10000 [00:00<00:01, 6339.77it/s]    Running AlievPanfilov2D:  23%|██▎       | 2263/10000 [00:00<00:00, 8837.82it/s]    Running AlievPanfilov2D:  34%|███▍      | 3441/10000 [00:00<00:00, 9997.83it/s]    Running AlievPanfilov2D:  46%|████▌     | 4615/10000 [00:00<00:00, 10625.11it/s]    Running AlievPanfilov2D:  58%|█████▊    | 5806/10000 [00:00<00:00, 11059.72it/s]    Running AlievPanfilov2D:  70%|██████▉   | 6998/10000 [00:00<00:00, 11338.23it/s]    Running AlievPanfilov2D:  82%|████████▏ | 8190/10000 [00:00<00:00, 11522.01it/s]    Running AlievPanfilov2D:  94%|█████████▍| 9382/10000 [00:00<00:00, 11644.77it/s]    Running AlievPanfilov2D: 100%|██████████| 10000/10000 [00:00<00:00, 10497.76it/s]






|

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import finitewave as fw

    # create a mesh of cardiomyocytes (elems = 1):
    n = 100
    tissue = fw.CardiacTissue2D([n, n])
    tissue.mesh = np.ones([n, n], dtype="uint8")
    tissue.add_boundaries()

    # create model object and set up parameters:
    aliev_panfilov = fw.AlievPanfilov2D()
    aliev_panfilov.dt = 0.01
    aliev_panfilov.dr = 0.25
    aliev_panfilov.t_max = 100

    # set up stimulation parameters:
    stim_sequence = fw.StimSequence()
    stim_sequence.add_stim(fw.StimVoltageCoord2D(0, 1, 0, 3, 0, n))

    # set up tracker parameters:
    tracker_sequence = fw.TrackerSequence()
    action_pot_tracker = fw.ActionPotential2DTracker()
    # to specify the mesh node under the measuring - use the cell_ind field:
    # eather list or list of lists can be used
    action_pot_tracker.cell_ind = [[30, 30], [40, 40]]
    tracker_sequence.add_tracker(action_pot_tracker)

    # add the tissue and the stim parameters to the model object:
    aliev_panfilov.cardiac_tissue = tissue
    aliev_panfilov.stim_sequence = stim_sequence
    aliev_panfilov.tracker_sequence = tracker_sequence

    aliev_panfilov.run()

    # plot the action potential
    time = np.arange(len(action_pot_tracker.output)) * aliev_panfilov.dt
    plt.plot(time, action_pot_tracker.output[:, 0], label="cell_30_30")
    plt.plot(time, action_pot_tracker.output[:, 1], label="cell_40_40")
    plt.legend(title='Aliev-Panfilov')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.000 seconds)


.. _sphx_glr_download_auto_examples_2D_plot_action_potential_2d_tracker.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_action_potential_2d_tracker.ipynb <plot_action_potential_2d_tracker.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_action_potential_2d_tracker.py <plot_action_potential_2d_tracker.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_action_potential_2d_tracker.zip <plot_action_potential_2d_tracker.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
